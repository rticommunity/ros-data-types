/* 
 * Copyright 2012-2018 Open Source Robotics Foundation 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License. 
 */ 

#ifndef __test_msgs__msg__BoundedSequences__idl
#define __test_msgs__msg__BoundedSequences__idl

#include "test_msgs/msg/BasicTypes.idl"
#include "test_msgs/msg/Constants.idl"
#include "test_msgs/msg/Defaults.idl"

module test_msgs {
  module msg {
    module dds_ {
      @appendable struct BoundedSequences_ {
        sequence<boolean,3> bool_values;
        sequence<octet,3> byte_values;
        sequence<octet,3> char_values;
        sequence<float,3> float32_values;
        sequence<double,3> float64_values;
        sequence<octet,3> int8_values;
        sequence<octet,3> uint8_values;
        sequence<int16,3> int16_values;
        sequence<uint16,3> uint16_values;
        sequence<int32,3> int32_values;
        sequence<uint32,3> uint32_values;
        sequence<int64,3> int64_values;
        sequence<uint64,3> uint64_values;
        sequence<string,3 > string_values;
        sequence<test_msgs::msg::dds_::BasicTypes_,3> basic_types_values;
        sequence<test_msgs::msg::dds_::Constants_,3> constants_values;
        sequence<test_msgs::msg::dds_::Defaults_,3> defaults_values;
        sequence<boolean,3> bool_values_default;
        sequence<octet,3> byte_values_default;
        sequence<octet,3> char_values_default;
        sequence<float,3> float32_values_default;
        sequence<double,3> float64_values_default;
        sequence<octet,3> int8_values_default;
        sequence<octet,3> uint8_values_default;
        sequence<int16,3> int16_values_default;
        sequence<uint16,3> uint16_values_default;
        sequence<int32,3> int32_values_default;
        sequence<uint32,3> uint32_values_default;
        sequence<int64,3> int64_values_default;
        sequence<uint64,3> uint64_values_default;
        sequence<string,3 > string_values_default;
        int32 alignment_check;
      };
    };
  };
};


#endif // __test_msgs__msg__BoundedSequences__idl
