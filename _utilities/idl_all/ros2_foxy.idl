/* IDL Data types scraped from ROS 2 'Foxy'.   Values use UNBOUNDED strings and sequences in most places */
module builtin_interfaces { module msg { module dds_ { @appendable struct Duration_ { int32 sec; uint32 nanosec; }; }; };};
module builtin_interfaces { module msg { module dds_ { @appendable struct Time_ { int32 sec; uint32 nanosec; }; }; };};
module unique_identifier_msgs { module msg { module dds_ { @appendable struct UUID_ { octet uuid[16]; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Bool_ { boolean data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Byte_ { octet data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Char_ { octet data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Float32_ { float data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Float64_ { double data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Int8_ { octet data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Int16_ { int16 data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Int32_ { int32 data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Int64_ { int64 data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct UInt8_ { octet data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct UInt16_ { uint16 data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct UInt32_ { uint32 data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct UInt64_ { uint64 data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct String_ { string data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Header_ { builtin_interfaces::msg::dds_::Time_ stamp; string frame_id; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct ColorRGBA_ { float r; float g; float b; float a; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Empty_ { octet structure_needs_at_least_one_member; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct MultiArrayDimension_ { string label; uint32 size; uint32 stride; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct MultiArrayLayout_ { sequence<std_msgs::msg::dds_::MultiArrayDimension_> dim; uint32 data_offset; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct ByteMultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<octet> data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Float32MultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<float> data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Float64MultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<double> data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Int16MultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<int16> data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Int32MultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<int32> data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Int64MultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<int64> data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct Int8MultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<octet> data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct UInt16MultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<uint16> data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct UInt32MultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<uint32> data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct UInt64MultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<uint64> data; }; }; };};
module std_msgs { module msg { module dds_ { @appendable struct UInt8MultiArray_ { std_msgs::msg::dds_::MultiArrayLayout_ layout; sequence<octet> data; }; }; };};
module std_srvs { module srv { module dds_ { @appendable struct Empty_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module std_srvs { module srv { module dds_ { @appendable struct Empty_Response_ { octet structure_needs_at_least_one_member; }; }; };};
module std_srvs { module srv { module dds_ { @appendable struct SetBool_Request_ { boolean data; }; }; };};
module std_srvs { module srv { module dds_ { @appendable struct SetBool_Response_ { boolean success; string message; }; }; };};
module std_srvs { module srv { module dds_ { @appendable struct Trigger_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module std_srvs { module srv { module dds_ { @appendable struct Trigger_Response_ { boolean success; string message; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Vector3_ { double x; double y; double z; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Vector3Stamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Vector3_ vector; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Accel_ { geometry_msgs::msg::dds_::Vector3_ linear; geometry_msgs::msg::dds_::Vector3_ angular; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct AccelStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Accel_ accel; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct AccelWithCovariance_ { geometry_msgs::msg::dds_::Accel_ accel; double covariance[36]; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct AccelWithCovarianceStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::AccelWithCovariance_ accel; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Inertia_ { double m; geometry_msgs::msg::dds_::Vector3_ com; double ixx; double ixy; double ixz; double iyy; double iyz; double izz; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct InertiaStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Inertia_ inertia; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Point32_ { float x; float y; float z; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Point_ { double x; double y; double z; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct PointStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Point_ point; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Polygon_ { sequence<geometry_msgs::msg::dds_::Point32_> points; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct PolygonStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Polygon_ polygon; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Quaternion_ { double x; double y; double z; double w; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct QuaternionStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Quaternion_ quaternion; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Pose2D_ { double x; double y; double theta; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Pose_ { geometry_msgs::msg::dds_::Point_ position; geometry_msgs::msg::dds_::Quaternion_ orientation; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct PoseArray_ { std_msgs::msg::dds_::Header_ header; sequence<geometry_msgs::msg::dds_::Pose_> poses; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct PoseStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Pose_ pose; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct PoseWithCovariance_ { geometry_msgs::msg::dds_::Pose_ pose; double covariance[36]; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct PoseWithCovarianceStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::PoseWithCovariance_ pose; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Transform_ { geometry_msgs::msg::dds_::Vector3_ translation; geometry_msgs::msg::dds_::Quaternion_ rotation; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct TransformStamped_ { std_msgs::msg::dds_::Header_ header; string child_frame_id; geometry_msgs::msg::dds_::Transform_ transform; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Twist_ { geometry_msgs::msg::dds_::Vector3_ linear; geometry_msgs::msg::dds_::Vector3_ angular; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct TwistStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Twist_ twist; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct TwistWithCovariance_ { geometry_msgs::msg::dds_::Twist_ twist; double covariance[36]; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct TwistWithCovarianceStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::TwistWithCovariance_ twist; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct Wrench_ { geometry_msgs::msg::dds_::Vector3_ force; geometry_msgs::msg::dds_::Vector3_ torque; }; }; };};
module geometry_msgs { module msg { module dds_ { @appendable struct WrenchStamped_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Wrench_ wrench; }; }; };};
module sensor_msgs { module msg { module dds_ { module BatteryState_Constants { const octet POWER_SUPPLY_STATUS_UNKNOWN_ = 0; const octet POWER_SUPPLY_STATUS_CHARGING_ = 1; const octet POWER_SUPPLY_STATUS_DISCHARGING_ = 2; const octet POWER_SUPPLY_STATUS_NOT_CHARGING_ = 3; const octet POWER_SUPPLY_STATUS_FULL_ = 4; const octet POWER_SUPPLY_HEALTH_UNKNOWN_ = 0; const octet POWER_SUPPLY_HEALTH_GOOD_ = 1; const octet POWER_SUPPLY_HEALTH_OVERHEAT_ = 2; const octet POWER_SUPPLY_HEALTH_DEAD_ = 3; const octet POWER_SUPPLY_HEALTH_OVERVOLTAGE_ = 4; const octet POWER_SUPPLY_HEALTH_UNSPEC_FAILURE_ = 5; const octet POWER_SUPPLY_HEALTH_COLD_ = 6; const octet POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE_ = 7; const octet POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE_ = 8; const octet POWER_SUPPLY_TECHNOLOGY_UNKNOWN_ = 0; const octet POWER_SUPPLY_TECHNOLOGY_NIMH_ = 1; const octet POWER_SUPPLY_TECHNOLOGY_LION_ = 2; const octet POWER_SUPPLY_TECHNOLOGY_LIPO_ = 3; const octet POWER_SUPPLY_TECHNOLOGY_LIFE_ = 4; const octet POWER_SUPPLY_TECHNOLOGY_NICD_ = 5; const octet POWER_SUPPLY_TECHNOLOGY_LIMN_ = 6; }; @appendable struct BatteryState_ { std_msgs::msg::dds_::Header_ header; float voltage; float temperature; float current; float charge; float capacity; float design_capacity; float percentage; octet power_supply_status; octet power_supply_health; octet power_supply_technology; boolean present; sequence<float> cell_voltage; sequence<float> cell_temperature; string location; string serial_number; }; }; };};
module sensor_msgs { module msg { module dds_ { module JoyFeedback_Constants { const octet TYPE_LED_ = 0; const octet TYPE_RUMBLE_ = 1; const octet TYPE_BUZZER_ = 2; }; @appendable struct JoyFeedback_ { octet type; octet id; float intensity; }; }; };};
module sensor_msgs { module msg { module dds_ { module NavSatStatus_Constants { const octet STATUS_NO_FIX_ = 255; const octet STATUS_FIX_ = 0; const octet STATUS_SBAS_FIX_ = 1; const octet STATUS_GBAS_FIX_ = 2; const uint16 SERVICE_GPS_ = 1; const uint16 SERVICE_GLONASS_ = 2; const uint16 SERVICE_COMPASS_ = 4; const uint16 SERVICE_GALILEO_ = 8; }; @appendable struct NavSatStatus_ { octet status; uint16 service; }; }; };};
module sensor_msgs { module msg { module dds_ { module NavSatFix_Constants { const octet COVARIANCE_TYPE_UNKNOWN_ = 0; const octet COVARIANCE_TYPE_APPROXIMATED_ = 1; const octet COVARIANCE_TYPE_DIAGONAL_KNOWN_ = 2; const octet COVARIANCE_TYPE_KNOWN_ = 3; }; @appendable struct NavSatFix_ { std_msgs::msg::dds_::Header_ header; sensor_msgs::msg::dds_::NavSatStatus_ status; double latitude; double longitude; double altitude; double position_covariance[9]; octet position_covariance_type; }; }; };};
module sensor_msgs { module msg { module dds_ { module PointField_Constants { const octet INT8_ = 1; const octet UINT8_ = 2; const octet INT16_ = 3; const octet UINT16_ = 4; const octet INT32_ = 5; const octet UINT32_ = 6; const octet FLOAT32_ = 7; const octet FLOAT64_ = 8; }; @appendable struct PointField_ { string name; uint32 offset; octet datatype; uint32 count; }; }; };};
module sensor_msgs { module msg { module dds_ { module Range_Constants { const octet ULTRASOUND_ = 0; const octet INFRARED_ = 1; }; @appendable struct Range_ { std_msgs::msg::dds_::Header_ header; octet radiation_type; float field_of_view; float min_range; float max_range; float range; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct RegionOfInterest_ { uint32 x_offset; uint32 y_offset; uint32 height; uint32 width; boolean do_rectify; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct CameraInfo_ { std_msgs::msg::dds_::Header_ header; uint32 height; uint32 width; string distortion_model; sequence<double> d; double k[9]; double r[9]; double p[12]; uint32 binning_x; uint32 binning_y; sensor_msgs::msg::dds_::RegionOfInterest_ roi; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct ChannelFloat32_ { string name; sequence<float> values; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct CompressedImage_ { std_msgs::msg::dds_::Header_ header; string format; sequence<octet> data; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct FluidPressure_ { std_msgs::msg::dds_::Header_ header; double fluid_pressure; double variance; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct Illuminance_ { std_msgs::msg::dds_::Header_ header; double illuminance; double variance; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct Image_ { std_msgs::msg::dds_::Header_ header; uint32 height; uint32 width; string encoding; octet is_bigendian; uint32 step; sequence<octet> data; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct Imu_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Quaternion_ orientation; double orientation_covariance[9]; geometry_msgs::msg::dds_::Vector3_ angular_velocity; double angular_velocity_covariance[9]; geometry_msgs::msg::dds_::Vector3_ linear_acceleration; double linear_acceleration_covariance[9]; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct JointState_ { std_msgs::msg::dds_::Header_ header; sequence<string> name; sequence<double> position; sequence<double> velocity; sequence<double> effort; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct JoyFeedbackArray_ { sequence<sensor_msgs::msg::dds_::JoyFeedback_> array; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct Joy_ { std_msgs::msg::dds_::Header_ header; sequence<float> axes; sequence<int32> buttons; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct LaserEcho_ { sequence<float> echoes; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct LaserScan_ { std_msgs::msg::dds_::Header_ header; float angle_min; float angle_max; float angle_increment; float time_increment; float scan_time; float range_min; float range_max; sequence<float> ranges; sequence<float> intensities; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct MagneticField_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Vector3_ magnetic_field; double magnetic_field_covariance[9]; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct MultiDOFJointState_ { std_msgs::msg::dds_::Header_ header; sequence<string> joint_names; sequence<geometry_msgs::msg::dds_::Transform_> transforms; sequence<geometry_msgs::msg::dds_::Twist_> twist; sequence<geometry_msgs::msg::dds_::Wrench_> wrench; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct MultiEchoLaserScan_ { std_msgs::msg::dds_::Header_ header; float angle_min; float angle_max; float angle_increment; float time_increment; float scan_time; float range_min; float range_max; sequence<sensor_msgs::msg::dds_::LaserEcho_> ranges; sequence<sensor_msgs::msg::dds_::LaserEcho_> intensities; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct PointCloud2_ { std_msgs::msg::dds_::Header_ header; uint32 height; uint32 width; sequence<sensor_msgs::msg::dds_::PointField_> fields; boolean is_bigendian; uint32 point_step; uint32 row_step; sequence<octet> data; boolean is_dense; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct PointCloud_ { std_msgs::msg::dds_::Header_ header; sequence<geometry_msgs::msg::dds_::Point32_> points; sequence<sensor_msgs::msg::dds_::ChannelFloat32_> channels; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct RelativeHumidity_ { std_msgs::msg::dds_::Header_ header; double relative_humidity; double variance; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct Temperature_ { std_msgs::msg::dds_::Header_ header; double temperature; double variance; }; }; };};
module sensor_msgs { module msg { module dds_ { @appendable struct TimeReference_ { std_msgs::msg::dds_::Header_ header; builtin_interfaces::msg::dds_::Time_ time_ref; string source; }; }; };};
module sensor_msgs { module srv { module dds_ { @appendable struct SetCameraInfo_Request_ { sensor_msgs::msg::dds_::CameraInfo_ camera_info; }; }; };};
module sensor_msgs { module srv { module dds_ { @appendable struct SetCameraInfo_Response_ { boolean success; string status_message; }; }; };};
module nav_msgs { module msg { module dds_ { @appendable struct GridCells_ { std_msgs::msg::dds_::Header_ header; float cell_width; float cell_height; sequence<geometry_msgs::msg::dds_::Point_> cells; }; }; };};
module nav_msgs { module msg { module dds_ { @appendable struct MapMetaData_ { builtin_interfaces::msg::dds_::Time_ map_load_time; float resolution; uint32 width; uint32 height; geometry_msgs::msg::dds_::Pose_ origin; }; }; };};
module nav_msgs { module msg { module dds_ { @appendable struct OccupancyGrid_ { std_msgs::msg::dds_::Header_ header; nav_msgs::msg::dds_::MapMetaData_ info; sequence<octet> data; }; }; };};
module nav_msgs { module msg { module dds_ { @appendable struct Odometry_ { std_msgs::msg::dds_::Header_ header; string child_frame_id; geometry_msgs::msg::dds_::PoseWithCovariance_ pose; geometry_msgs::msg::dds_::TwistWithCovariance_ twist; }; }; };};
module nav_msgs { module msg { module dds_ { @appendable struct Path_ { std_msgs::msg::dds_::Header_ header; sequence<geometry_msgs::msg::dds_::PoseStamped_> poses; }; }; };};
module nav_msgs { module srv { module dds_ { @appendable struct GetMap_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module nav_msgs { module srv { module dds_ { @appendable struct GetMap_Response_ { nav_msgs::msg::dds_::OccupancyGrid_ map; }; }; };};
module nav_msgs { module srv { module dds_ { @appendable struct GetPlan_Request_ { geometry_msgs::msg::dds_::PoseStamped_ start; geometry_msgs::msg::dds_::PoseStamped_ goal; float tolerance; }; }; };};
module nav_msgs { module srv { module dds_ { @appendable struct GetPlan_Response_ { nav_msgs::msg::dds_::Path_ plan; }; }; };};
module nav_msgs { module srv { module dds_ { @appendable struct SetMap_Request_ { nav_msgs::msg::dds_::OccupancyGrid_ map; geometry_msgs::msg::dds_::PoseWithCovarianceStamped_ initial_pose; }; }; };};
module nav_msgs { module srv { module dds_ { @appendable struct SetMap_Response_ { boolean success; }; }; };};
module map_msgs { module msg { module dds_ { @appendable struct OccupancyGridUpdate_ { std_msgs::msg::dds_::Header_ header; int32 x; int32 y; uint32 width; uint32 height; sequence<octet> data; }; }; };};
module map_msgs { module msg { module dds_ { @appendable struct ProjectedMapInfo_ { string frame_id; double x; double y; double width; double height; double min_z; double max_z; }; }; };};
module map_msgs { module msg { module dds_ { @appendable struct ProjectedMap_ { nav_msgs::msg::dds_::OccupancyGrid_ map; double min_z; double max_z; }; }; };};
module map_msgs { module msg { module dds_ { module PointCloud2Update_Constants { const uint32 ADD_ = 0; const uint32 DELETE_ = 1; }; @appendable struct PointCloud2Update_ { std_msgs::msg::dds_::Header_ header; uint32 type; sensor_msgs::msg::dds_::PointCloud2_ points; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct GetMapROI_Request_ { double x; double y; double l_x; double l_y; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct GetMapROI_Response_ { nav_msgs::msg::dds_::OccupancyGrid_ sub_map; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct GetPointMapROI_Request_ { double x; double y; double z; double r; double l_x; double l_y; double l_z; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct GetPointMapROI_Response_ { sensor_msgs::msg::dds_::PointCloud2_ sub_map; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct GetPointMap_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct GetPointMap_Response_ { sensor_msgs::msg::dds_::PointCloud2_ map; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct ProjectedMapsInfo_Request_ { sequence<map_msgs::msg::dds_::ProjectedMapInfo_> projected_maps_info; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct ProjectedMapsInfo_Response_ { octet structure_needs_at_least_one_member; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct SaveMap_Request_ { std_msgs::msg::dds_::String_ filename; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct SaveMap_Response_ { octet structure_needs_at_least_one_member; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct SetMapProjections_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module map_msgs { module srv { module dds_ { @appendable struct SetMapProjections_Response_ { sequence<map_msgs::msg::dds_::ProjectedMapInfo_> projected_maps_info; }; }; };};
module action_msgs { module msg { module dds_ { @appendable struct GoalInfo_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; builtin_interfaces::msg::dds_::Time_ stamp; }; }; };};
module action_msgs { module msg { module dds_ { module GoalStatus_Constants { const octet STATUS_UNKNOWN_ = 0; const octet STATUS_ACCEPTED_ = 1; const octet STATUS_EXECUTING_ = 2; const octet STATUS_CANCELING_ = 3; const octet STATUS_SUCCEEDED_ = 4; const octet STATUS_CANCELED_ = 5; const octet STATUS_ABORTED_ = 6; }; @appendable struct GoalStatus_ { action_msgs::msg::dds_::GoalInfo_ goal_info; octet status; }; }; };};
module action_msgs { module msg { module dds_ { @appendable struct GoalStatusArray_ { sequence<action_msgs::msg::dds_::GoalStatus_> status_list; }; }; };};
module action_msgs { module srv { module dds_ { @appendable struct CancelGoal_Request_ { action_msgs::msg::dds_::GoalInfo_ goal_info; }; }; };};
module action_msgs { module srv { module dds_ { module CancelGoal_Response_Constants { const octet ERROR_NONE_ = 0; const octet ERROR_REJECTED_ = 1; const octet ERROR_UNKNOWN_GOAL_ID_ = 2; const octet ERROR_GOAL_TERMINATED_ = 3; }; @appendable struct CancelGoal_Response_ { octet return_code; sequence<action_msgs::msg::dds_::GoalInfo_> goals_canceling; }; }; };};
module actionlib_msgs { module msg { module dds_ { @appendable struct GoalID_ { builtin_interfaces::msg::dds_::Time_ stamp; string id; }; }; };};
module actionlib_msgs { module msg { module dds_ { module GoalStatus_Constants { const octet PENDING_ = 0; const octet ACTIVE_ = 1; const octet PREEMPTED_ = 2; const octet SUCCEEDED_ = 3; const octet ABORTED_ = 4; const octet REJECTED_ = 5; const octet PREEMPTING_ = 6; const octet RECALLING_ = 7; const octet RECALLED_ = 8; const octet LOST_ = 9; }; @appendable struct GoalStatus_ { actionlib_msgs::msg::dds_::GoalID_ goal_id; octet status; string text; }; }; };};
module actionlib_msgs { module msg { module dds_ { @appendable struct GoalStatusArray_ { std_msgs::msg::dds_::Header_ header; sequence<actionlib_msgs::msg::dds_::GoalStatus_> status_list; }; }; };};
module rcl_interfaces { module msg { module dds_ { @appendable struct FloatingPointRange_ { double from_value; double to_value; double step; }; }; };};
module rcl_interfaces { module msg { module dds_ { @appendable struct IntegerRange_ { int64 from_value; int64 to_value; uint64 step; }; }; };};
module rcl_interfaces { module msg { module dds_ { @appendable struct ListParametersResult_ { sequence<string> names; sequence<string> prefixes; }; }; };};
module rcl_interfaces { module msg { module dds_ { @appendable struct ParameterDescriptor_ { string name; octet type; string description; string additional_constraints; boolean read_only; sequence<rcl_interfaces::msg::dds_::FloatingPointRange_,1> floating_point_range; sequence<rcl_interfaces::msg::dds_::IntegerRange_,1> integer_range; }; }; };};
module rcl_interfaces { module msg { module dds_ { @appendable struct ParameterEventDescriptors_ { sequence<rcl_interfaces::msg::dds_::ParameterDescriptor_> new_parameters; sequence<rcl_interfaces::msg::dds_::ParameterDescriptor_> changed_parameters; sequence<rcl_interfaces::msg::dds_::ParameterDescriptor_> deleted_parameters; }; }; };};
module rcl_interfaces { module msg { module dds_ { @appendable struct ParameterValue_ { octet type; boolean bool_value; int64 integer_value; double double_value; string string_value; sequence<octet> byte_array_value; sequence<boolean> bool_array_value; sequence<int64> integer_array_value; sequence<double> double_array_value; sequence<string> string_array_value; }; }; };};
module rcl_interfaces { module msg { module dds_ { @appendable struct Parameter_ { string name; rcl_interfaces::msg::dds_::ParameterValue_ value; }; }; };};
module rcl_interfaces { module msg { module dds_ { @appendable struct ParameterEvent_ { builtin_interfaces::msg::dds_::Time_ stamp; string node; sequence<rcl_interfaces::msg::dds_::Parameter_> new_parameters; sequence<rcl_interfaces::msg::dds_::Parameter_> changed_parameters; sequence<rcl_interfaces::msg::dds_::Parameter_> deleted_parameters; }; }; };};
module rcl_interfaces { module msg { module dds_ { @appendable struct SetParametersResult_ { boolean successful; string reason; }; }; };};
module rcl_interfaces { module msg { module dds_ { module Log_Constants { const octet DEBUG_ = 10; const octet INFO_ = 20; const octet WARN_ = 30; const octet ERROR_ = 40; const octet FATAL_ = 50; }; @appendable struct Log_ { builtin_interfaces::msg::dds_::Time_ stamp; octet level; string name; string msg; string file; string function; uint32 line; }; }; };};
module rcl_interfaces { module msg { module dds_ { module ParameterType_Constants { const octet PARAMETER_NOT_SET_ = 0; const octet PARAMETER_BOOL_ = 1; const octet PARAMETER_INTEGER_ = 2; const octet PARAMETER_DOUBLE_ = 3; const octet PARAMETER_STRING_ = 4; const octet PARAMETER_BYTE_ARRAY_ = 5; const octet PARAMETER_BOOL_ARRAY_ = 6; const octet PARAMETER_INTEGER_ARRAY_ = 7; const octet PARAMETER_DOUBLE_ARRAY_ = 8; const octet PARAMETER_STRING_ARRAY_ = 9; }; @appendable struct ParameterType_ { octet structure_needs_at_least_one_member; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct DescribeParameters_Request_ { sequence<string> names; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct DescribeParameters_Response_ { sequence<rcl_interfaces::msg::dds_::ParameterDescriptor_> descriptors; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct GetParameterTypes_Request_ { sequence<string> names; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct GetParameterTypes_Response_ { sequence<octet> types; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct GetParameters_Request_ { sequence<string> names; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct GetParameters_Response_ { sequence<rcl_interfaces::msg::dds_::ParameterValue_> values; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct ListParameters_Response_ { rcl_interfaces::msg::dds_::ListParametersResult_ result; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct SetParametersAtomically_Request_ { sequence<rcl_interfaces::msg::dds_::Parameter_> parameters; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct SetParametersAtomically_Response_ { rcl_interfaces::msg::dds_::SetParametersResult_ result; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct SetParameters_Request_ { sequence<rcl_interfaces::msg::dds_::Parameter_> parameters; }; }; };};
module rcl_interfaces { module srv { module dds_ { @appendable struct SetParameters_Response_ { sequence<rcl_interfaces::msg::dds_::SetParametersResult_> results; }; }; };};
module rcl_interfaces { module srv { module dds_ { module ListParameters_Request_Constants { const uint64 DEPTH_RECURSIVE_ = 0; }; @appendable struct ListParameters_Request_ { sequence<string> prefixes; uint64 depth; }; }; };};
module diagnostic_msgs { module msg { module dds_ { @appendable struct KeyValue_ { string key; string value; }; }; };};
module diagnostic_msgs { module msg { module dds_ { module DiagnosticStatus_Constants { const octet OK_ = 0; const octet WARN_ = 1; const octet ERROR_ = 2; const octet STALE_ = 3; }; @appendable struct DiagnosticStatus_ { octet level; string name; string message; string hardware_id; sequence<diagnostic_msgs::msg::dds_::KeyValue_> values; }; }; };};
module diagnostic_msgs { module msg { module dds_ { @appendable struct DiagnosticArray_ { std_msgs::msg::dds_::Header_ header; sequence<diagnostic_msgs::msg::dds_::DiagnosticStatus_> status; }; }; };};
module diagnostic_msgs { module srv { module dds_ { @appendable struct AddDiagnostics_Request_ { string load_namespace; }; }; };};
module diagnostic_msgs { module srv { module dds_ { @appendable struct AddDiagnostics_Response_ { boolean success; string message; }; }; };};
module diagnostic_msgs { module srv { module dds_ { @appendable struct SelfTest_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module diagnostic_msgs { module srv { module dds_ { @appendable struct SelfTest_Response_ { string id; octet passed; sequence<diagnostic_msgs::msg::dds_::DiagnosticStatus_> status; }; }; };};
module libstatistics_collector { module msg { module dds_ { @appendable struct DummyMessage_ { std_msgs::msg::dds_::Header_ header; }; }; };};
module lifecycle_msgs { module msg { module dds_ { module State_Constants { const octet PRIMARY_STATE_UNKNOWN_ = 0; const octet PRIMARY_STATE_UNCONFIGURED_ = 1; const octet PRIMARY_STATE_INACTIVE_ = 2; const octet PRIMARY_STATE_ACTIVE_ = 3; const octet PRIMARY_STATE_FINALIZED_ = 4; const octet TRANSITION_STATE_CONFIGURING_ = 10; const octet TRANSITION_STATE_CLEANINGUP_ = 11; const octet TRANSITION_STATE_SHUTTINGDOWN_ = 12; const octet TRANSITION_STATE_ACTIVATING_ = 13; const octet TRANSITION_STATE_DEACTIVATING_ = 14; const octet TRANSITION_STATE_ERRORPROCESSING_ = 15; }; @appendable struct State_ { octet id; string label; }; }; };};
module lifecycle_msgs { module msg { module dds_ { module Transition_Constants { const octet TRANSITION_CREATE_ = 0; const octet TRANSITION_CONFIGURE_ = 1; const octet TRANSITION_CLEANUP_ = 2; const octet TRANSITION_ACTIVATE_ = 3; const octet TRANSITION_DEACTIVATE_ = 4; const octet TRANSITION_UNCONFIGURED_SHUTDOWN_ = 5; const octet TRANSITION_INACTIVE_SHUTDOWN_ = 6; const octet TRANSITION_ACTIVE_SHUTDOWN_ = 7; const octet TRANSITION_DESTROY_ = 8; const octet TRANSITION_ON_CONFIGURE_SUCCESS_ = 10; const octet TRANSITION_ON_CONFIGURE_FAILURE_ = 11; const octet TRANSITION_ON_CONFIGURE_ERROR_ = 12; const octet TRANSITION_ON_CLEANUP_SUCCESS_ = 20; const octet TRANSITION_ON_CLEANUP_FAILURE_ = 21; const octet TRANSITION_ON_CLEANUP_ERROR_ = 22; const octet TRANSITION_ON_ACTIVATE_SUCCESS_ = 30; const octet TRANSITION_ON_ACTIVATE_FAILURE_ = 31; const octet TRANSITION_ON_ACTIVATE_ERROR_ = 32; const octet TRANSITION_ON_DEACTIVATE_SUCCESS_ = 40; const octet TRANSITION_ON_DEACTIVATE_FAILURE_ = 41; const octet TRANSITION_ON_DEACTIVATE_ERROR_ = 42; const octet TRANSITION_ON_SHUTDOWN_SUCCESS_ = 50; const octet TRANSITION_ON_SHUTDOWN_FAILURE_ = 51; const octet TRANSITION_ON_SHUTDOWN_ERROR_ = 52; const octet TRANSITION_ON_ERROR_SUCCESS_ = 60; const octet TRANSITION_ON_ERROR_FAILURE_ = 61; const octet TRANSITION_ON_ERROR_ERROR_ = 62; const octet TRANSITION_CALLBACK_SUCCESS_ = 97; const octet TRANSITION_CALLBACK_FAILURE_ = 98; const octet TRANSITION_CALLBACK_ERROR_ = 99; }; @appendable struct Transition_ { octet id; string label; }; }; };};
module lifecycle_msgs { module msg { module dds_ { @appendable struct TransitionDescription_ { lifecycle_msgs::msg::dds_::Transition_ transition; lifecycle_msgs::msg::dds_::State_ start_state; lifecycle_msgs::msg::dds_::State_ goal_state; }; }; };};
module lifecycle_msgs { module msg { module dds_ { @appendable struct TransitionEvent_ { uint64 timestamp; lifecycle_msgs::msg::dds_::Transition_ transition; lifecycle_msgs::msg::dds_::State_ start_state; lifecycle_msgs::msg::dds_::State_ goal_state; }; }; };};
module lifecycle_msgs { module srv { module dds_ { @appendable struct ChangeState_Request_ { lifecycle_msgs::msg::dds_::Transition_ transition; }; }; };};
module lifecycle_msgs { module srv { module dds_ { @appendable struct ChangeState_Response_ { boolean success; }; }; };};
module lifecycle_msgs { module srv { module dds_ { @appendable struct GetAvailableStates_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module lifecycle_msgs { module srv { module dds_ { @appendable struct GetAvailableStates_Response_ { sequence<lifecycle_msgs::msg::dds_::State_> available_states; }; }; };};
module lifecycle_msgs { module srv { module dds_ { @appendable struct GetAvailableTransitions_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module lifecycle_msgs { module srv { module dds_ { @appendable struct GetAvailableTransitions_Response_ { sequence<lifecycle_msgs::msg::dds_::TransitionDescription_> available_transitions; }; }; };};
module lifecycle_msgs { module srv { module dds_ { @appendable struct GetState_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module lifecycle_msgs { module srv { module dds_ { @appendable struct GetState_Response_ { lifecycle_msgs::msg::dds_::State_ current_state; }; }; };};
module logging_demo { module srv { module dds_ { @appendable struct ConfigLogger_Request_ { string logger_name; string level; }; }; };};
module logging_demo { module srv { module dds_ { @appendable struct ConfigLogger_Response_ { boolean success; }; }; };};
module move_base_msgs { module action { module dds_ { @appendable struct MoveBase_Feedback_ { geometry_msgs::msg::dds_::PoseStamped_ base_position; }; }; };};
module move_base_msgs { module action { module dds_ { @appendable struct MoveBase_FeedbackMessage_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; move_base_msgs::action::dds_::MoveBase_Feedback_ feedback; }; }; };};
module move_base_msgs { module action { module dds_ { @appendable struct MoveBase_Goal_ { geometry_msgs::msg::dds_::PoseStamped_ target_pose; }; }; };};
module move_base_msgs { module action { module dds_ { @appendable struct MoveBase_SendGoal_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; move_base_msgs::action::dds_::MoveBase_Goal_ goal; }; }; };};
module move_base_msgs { module action { module dds_ { @appendable struct MoveBase_SendGoal_Response_ { boolean accepted; builtin_interfaces::msg::dds_::Time_ stamp; }; }; };};
module move_base_msgs { module action { module dds_ { @appendable struct MoveBase_Result_ { octet structure_needs_at_least_one_member; }; }; };};
module move_base_msgs { module action { module dds_ { @appendable struct MoveBase_GetResult_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; }; }; };};
module move_base_msgs { module action { module dds_ { @appendable struct MoveBase_GetResult_Response_ { octet status; move_base_msgs::action::dds_::MoveBase_Result_ result; }; }; };};
module pendulum_msgs { module msg { module dds_ { @appendable struct JointCommand_ { double position; }; }; };};
module pendulum_msgs { module msg { module dds_ { @appendable struct JointState_ { double position; double velocity; double effort; }; }; };};
module pendulum_msgs { module msg { module dds_ { @appendable struct RttestResults_ { builtin_interfaces::msg::dds_::Time_ stamp; pendulum_msgs::msg::dds_::JointCommand_ command; pendulum_msgs::msg::dds_::JointState_ state; uint64 cur_latency; double mean_latency; uint64 min_latency; uint64 max_latency; uint64 minor_pagefaults; uint64 major_pagefaults; }; }; };};
module composition_interfaces { module srv { module dds_ { @appendable struct ListNodes_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module composition_interfaces { module srv { module dds_ { @appendable struct ListNodes_Response_ { sequence<string> full_node_names; sequence<uint64> unique_ids; }; }; };};
module composition_interfaces { module srv { module dds_ { @appendable struct LoadNode_Request_ { string package_name; string plugin_name; string node_name; string node_namespace; octet log_level; sequence<string> remap_rules; sequence<rcl_interfaces::msg::dds_::Parameter_> parameters; sequence<rcl_interfaces::msg::dds_::Parameter_> extra_arguments; }; }; };};
module composition_interfaces { module srv { module dds_ { @appendable struct LoadNode_Response_ { boolean success; string error_message; string full_node_name; uint64 unique_id; }; }; };};
module composition_interfaces { module srv { module dds_ { @appendable struct UnloadNode_Request_ { uint64 unique_id; }; }; };};
module composition_interfaces { module srv { module dds_ { @appendable struct UnloadNode_Response_ { boolean success; string error_message; }; }; };};
module rclcpp { module msg { module dds_ { @appendable struct Header_ { builtin_interfaces::msg::dds_::Time_ stamp; }; }; };};
module rclcpp { module msg { module dds_ { @appendable struct MessageWithHeader_ { rclcpp::msg::dds_::Header_ header; }; }; };};
module rmw_dds_common { module msg { module dds_ { @appendable struct Gid_ { octet data[24]; }; }; };};
module rmw_dds_common { module msg { module dds_ { @appendable struct NodeEntitiesInfo_ { string<256> node_namespace; string<256> node_name; sequence<rmw_dds_common::msg::dds_::Gid_> reader_gid_seq; sequence<rmw_dds_common::msg::dds_::Gid_> writer_gid_seq; }; }; };};
module rmw_dds_common { module msg { module dds_ { @appendable struct ParticipantEntitiesInfo_ { rmw_dds_common::msg::dds_::Gid_ gid; sequence<rmw_dds_common::msg::dds_::NodeEntitiesInfo_> node_entities_info_seq; }; }; };};
module rosgraph_msgs { module msg { module dds_ { @appendable struct Clock_ { builtin_interfaces::msg::dds_::Time_ clock; }; }; };};
module rqt_py_common { module msg { module dds_ { @appendable struct Val_ { double floats[5]; }; }; };};
module rqt_py_common { module msg { module dds_ { @appendable struct ArrayVal_ { rqt_py_common::msg::dds_::Val_ vals[5]; }; }; };};
module rqt_py_common { module srv { module dds_ { @appendable struct AddTwoInts_Request_ { int64 a; int64 b; }; }; };};
module rqt_py_common { module srv { module dds_ { @appendable struct AddTwoInts_Response_ { int64 sum; }; }; };};
module shape_msgs { module msg { module dds_ { module SolidPrimitive_Constants { const octet BOX_ = 1; const octet SPHERE_ = 2; const octet CYLINDER_ = 3; const octet CONE_ = 4; const octet BOX_X_ = 0; const octet BOX_Y_ = 1; const octet BOX_Z_ = 2; const octet SPHERE_RADIUS_ = 0; const octet CYLINDER_HEIGHT_ = 0; const octet CYLINDER_RADIUS_ = 1; const octet CONE_HEIGHT_ = 0; const octet CONE_RADIUS_ = 1; }; @appendable struct SolidPrimitive_ { octet type; sequence<double,3> dimensions; }; }; };};
module shape_msgs { module msg { module dds_ { @appendable struct MeshTriangle_ { uint32 vertex_indices[3]; }; }; };};
module shape_msgs { module msg { module dds_ { @appendable struct Mesh_ { sequence<shape_msgs::msg::dds_::MeshTriangle_> triangles; sequence<geometry_msgs::msg::dds_::Point_> vertices; }; }; };};
module shape_msgs { module msg { module dds_ { @appendable struct Plane_ { double coef[4]; }; }; };};
module statistics_msgs { module msg { module dds_ { module StatisticDataType_Constants { const octet STATISTICS_DATA_TYPE_UNINITIALIZED_ = 0; const octet STATISTICS_DATA_TYPE_AVERAGE_ = 1; const octet STATISTICS_DATA_TYPE_MINIMUM_ = 2; const octet STATISTICS_DATA_TYPE_MAXIMUM_ = 3; const octet STATISTICS_DATA_TYPE_STDDEV_ = 4; const octet STATISTICS_DATA_TYPE_SAMPLE_COUNT_ = 5; }; @appendable struct StatisticDataType_ { octet structure_needs_at_least_one_member; }; }; };};
module statistics_msgs { module msg { module dds_ { @appendable struct StatisticDataPoint_ { octet data_type; double data; }; }; };};
module statistics_msgs { module msg { module dds_ { @appendable struct MetricsMessage_ { string measurement_source_name; string metrics_source; string unit; builtin_interfaces::msg::dds_::Time_ window_start; builtin_interfaces::msg::dds_::Time_ window_stop; sequence<statistics_msgs::msg::dds_::StatisticDataPoint_> statistics; }; }; };};
module stereo_msgs { module msg { module dds_ { @appendable struct DisparityImage_ { std_msgs::msg::dds_::Header_ header; sensor_msgs::msg::dds_::Image_ image; float f; float t; sensor_msgs::msg::dds_::RegionOfInterest_ valid_window; float min_disparity; float max_disparity; float delta_d; }; }; };};
module tf2_msgs { module msg { module dds_ { @appendable struct TFMessage_ { sequence<geometry_msgs::msg::dds_::TransformStamped_> transforms; }; }; };};
module tf2_msgs { module msg { module dds_ { module TF2Error_Constants { const octet NO_ERROR_ = 0; const octet LOOKUP_ERROR_ = 1; const octet CONNECTIVITY_ERROR_ = 2; const octet EXTRAPOLATION_ERROR_ = 3; const octet INVALID_ARGUMENT_ERROR_ = 4; const octet TIMEOUT_ERROR_ = 5; const octet TRANSFORM_ERROR_ = 6; }; @appendable struct TF2Error_ { octet error; string error_string; }; }; };};
module tf2_msgs { module srv { module dds_ { @appendable struct FrameGraph_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module tf2_msgs { module srv { module dds_ { @appendable struct FrameGraph_Response_ { string frame_yaml; }; }; };};
module tf2_msgs { module action { module dds_ { @appendable struct LookupTransform_Feedback_ { octet structure_needs_at_least_one_member; }; }; };};
module tf2_msgs { module action { module dds_ { @appendable struct LookupTransform_FeedbackMessage_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; tf2_msgs::action::dds_::LookupTransform_Feedback_ feedback; }; }; };};
module tf2_msgs { module action { module dds_ { @appendable struct LookupTransform_Result_ { geometry_msgs::msg::dds_::TransformStamped_ transform; tf2_msgs::msg::dds_::TF2Error_ error; }; }; };};
module tf2_msgs { module action { module dds_ { @appendable struct LookupTransform_GetResult_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; }; }; };};
module tf2_msgs { module action { module dds_ { @appendable struct LookupTransform_GetResult_Response_ { octet status; tf2_msgs::action::dds_::LookupTransform_Result_ result; }; }; };};
module tf2_msgs { module action { module dds_ { @appendable struct LookupTransform_Goal_ { string target_frame; string source_frame; builtin_interfaces::msg::dds_::Time_ source_time; builtin_interfaces::msg::dds_::Duration_ timeout; builtin_interfaces::msg::dds_::Time_ target_time; string fixed_frame; boolean advanced; }; }; };};
module tf2_msgs { module action { module dds_ { @appendable struct LookupTransform_SendGoal_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; tf2_msgs::action::dds_::LookupTransform_Goal_ goal; }; }; };};
module tf2_msgs { module action { module dds_ { @appendable struct LookupTransform_SendGoal_Response_ { boolean accepted; builtin_interfaces::msg::dds_::Time_ stamp; }; }; };};
module trajectory_msgs { module msg { module dds_ { @appendable struct JointTrajectoryPoint_ { sequence<double> positions; sequence<double> velocities; sequence<double> accelerations; sequence<double> effort; builtin_interfaces::msg::dds_::Duration_ time_from_start; }; }; };};
module trajectory_msgs { module msg { module dds_ { @appendable struct JointTrajectory_ { std_msgs::msg::dds_::Header_ header; sequence<string> joint_names; sequence<trajectory_msgs::msg::dds_::JointTrajectoryPoint_> points; }; }; };};
module trajectory_msgs { module msg { module dds_ { @appendable struct MultiDOFJointTrajectoryPoint_ { sequence<geometry_msgs::msg::dds_::Transform_> transforms; sequence<geometry_msgs::msg::dds_::Twist_> velocities; sequence<geometry_msgs::msg::dds_::Twist_> accelerations; builtin_interfaces::msg::dds_::Duration_ time_from_start; }; }; };};
module trajectory_msgs { module msg { module dds_ { @appendable struct MultiDOFJointTrajectory_ { std_msgs::msg::dds_::Header_ header; sequence<string> joint_names; sequence<trajectory_msgs::msg::dds_::MultiDOFJointTrajectoryPoint_> points; }; }; };};
module turtlesim { module action { module dds_ { @appendable struct RotateAbsolute_Feedback_ { float remaining; }; }; };};
module turtlesim { module action { module dds_ { @appendable struct RotateAbsolute_FeedbackMessage_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; turtlesim::action::dds_::RotateAbsolute_Feedback_ feedback; }; }; };};
module turtlesim { module action { module dds_ { @appendable struct RotateAbsolute_Result_ { float delta; }; }; };};
module turtlesim { module action { module dds_ { @appendable struct RotateAbsolute_GetResult_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; }; }; };};
module turtlesim { module action { module dds_ { @appendable struct RotateAbsolute_GetResult_Response_ { octet status; turtlesim::action::dds_::RotateAbsolute_Result_ result; }; }; };};
module turtlesim { module action { module dds_ { @appendable struct RotateAbsolute_Goal_ { float theta; }; }; };};
module turtlesim { module action { module dds_ { @appendable struct RotateAbsolute_SendGoal_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; turtlesim::action::dds_::RotateAbsolute_Goal_ goal; }; }; };};
module turtlesim { module action { module dds_ { @appendable struct RotateAbsolute_SendGoal_Response_ { boolean accepted; builtin_interfaces::msg::dds_::Time_ stamp; }; }; };};
module turtlesim { module msg { module dds_ { @appendable struct Color_ { octet r; octet g; octet b; }; }; };};
module turtlesim { module msg { module dds_ { @appendable struct Pose_ { float x; float y; float theta; float linear_velocity; float angular_velocity; }; }; };};
module turtlesim { module srv { module dds_ { @appendable struct Kill_Request_ { string name; }; }; };};
module turtlesim { module srv { module dds_ { @appendable struct Kill_Response_ { octet structure_needs_at_least_one_member; }; }; };};
module turtlesim { module srv { module dds_ { @appendable struct SetPen_Request_ { octet r; octet g; octet b; octet width; octet off; }; }; };};
module turtlesim { module srv { module dds_ { @appendable struct SetPen_Response_ { octet structure_needs_at_least_one_member; }; }; };};
module turtlesim { module srv { module dds_ { @appendable struct Spawn_Request_ { float x; float y; float theta; string name; }; }; };};
module turtlesim { module srv { module dds_ { @appendable struct Spawn_Response_ { string name; }; }; };};
module turtlesim { module srv { module dds_ { @appendable struct TeleportAbsolute_Request_ { float x; float y; float theta; }; }; };};
module turtlesim { module srv { module dds_ { @appendable struct TeleportAbsolute_Response_ { octet structure_needs_at_least_one_member; }; }; };};
module turtlesim { module srv { module dds_ { @appendable struct TeleportRelative_Request_ { float linear; float angular; }; }; };};
module turtlesim { module srv { module dds_ { @appendable struct TeleportRelative_Response_ { octet structure_needs_at_least_one_member; }; }; };};
module visualization_msgs { module msg { module dds_ { module MenuEntry_Constants { const octet FEEDBACK_ = 0; const octet ROSRUN_ = 1; const octet ROSLAUNCH_ = 2; }; @appendable struct MenuEntry_ { uint32 id; uint32 parent_id; string title; string command; octet command_type; }; }; };};
module visualization_msgs { module msg { module dds_ { module ImageMarker_Constants { const int32 CIRCLE_ = 0; const int32 LINE_STRIP_ = 1; const int32 LINE_LIST_ = 2; const int32 POLYGON_ = 3; const int32 POINTS_ = 4; const int32 ADD_ = 0; const int32 REMOVE_ = 1; }; @appendable struct ImageMarker_ { std_msgs::msg::dds_::Header_ header; string ns; int32 id; int32 type; int32 action; geometry_msgs::msg::dds_::Point_ position; float scale; std_msgs::msg::dds_::ColorRGBA_ outline_color; octet filled; std_msgs::msg::dds_::ColorRGBA_ fill_color; builtin_interfaces::msg::dds_::Duration_ lifetime; sequence<geometry_msgs::msg::dds_::Point_> points; sequence<std_msgs::msg::dds_::ColorRGBA_> outline_colors; }; }; };};
module visualization_msgs { module msg { module dds_ { module Marker_Constants { const int32 ARROW_ = 0; const int32 CUBE_ = 1; const int32 SPHERE_ = 2; const int32 CYLINDER_ = 3; const int32 LINE_STRIP_ = 4; const int32 LINE_LIST_ = 5; const int32 CUBE_LIST_ = 6; const int32 SPHERE_LIST_ = 7; const int32 POINTS_ = 8; const int32 TEXT_VIEW_FACING_ = 9; const int32 MESH_RESOURCE_ = 10; const int32 TRIANGLE_LIST_ = 11; const int32 ADD_ = 0; const int32 MODIFY_ = 0; const int32 DELETE_ = 2; const int32 DELETEALL_ = 3; }; @appendable struct Marker_ { std_msgs::msg::dds_::Header_ header; string ns; int32 id; int32 type; int32 action; geometry_msgs::msg::dds_::Pose_ pose; geometry_msgs::msg::dds_::Vector3_ scale; std_msgs::msg::dds_::ColorRGBA_ color; builtin_interfaces::msg::dds_::Duration_ lifetime; boolean frame_locked; sequence<geometry_msgs::msg::dds_::Point_> points; sequence<std_msgs::msg::dds_::ColorRGBA_> colors; string text; string mesh_resource; boolean mesh_use_embedded_materials; }; }; };};
module visualization_msgs { module msg { module dds_ { module InteractiveMarkerControl_Constants { const octet INHERIT_ = 0; const octet FIXED_ = 1; const octet VIEW_FACING_ = 2; const octet NONE_ = 0; const octet MENU_ = 1; const octet BUTTON_ = 2; const octet MOVE_AXIS_ = 3; const octet MOVE_PLANE_ = 4; const octet ROTATE_AXIS_ = 5; const octet MOVE_ROTATE_ = 6; const octet MOVE_3D_ = 7; const octet ROTATE_3D_ = 8; const octet MOVE_ROTATE_3D_ = 9; }; @appendable struct InteractiveMarkerControl_ { string name; geometry_msgs::msg::dds_::Quaternion_ orientation; octet orientation_mode; octet interaction_mode; boolean always_visible; sequence<visualization_msgs::msg::dds_::Marker_> markers; boolean independent_marker_orientation; string description; }; }; };};
module visualization_msgs { module msg { module dds_ { @appendable struct InteractiveMarker_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Pose_ pose; string name; string description; float scale; sequence<visualization_msgs::msg::dds_::MenuEntry_> menu_entries; sequence<visualization_msgs::msg::dds_::InteractiveMarkerControl_> controls; }; }; };};
module visualization_msgs { module msg { module dds_ { @appendable struct InteractiveMarkerInit_ { string server_id; uint64 seq_num; sequence<visualization_msgs::msg::dds_::InteractiveMarker_> markers; }; }; };};
module visualization_msgs { module msg { module dds_ { @appendable struct InteractiveMarkerPose_ { std_msgs::msg::dds_::Header_ header; geometry_msgs::msg::dds_::Pose_ pose; string name; }; }; };};
module visualization_msgs { module msg { module dds_ { @appendable struct MarkerArray_ { sequence<visualization_msgs::msg::dds_::Marker_> markers; }; }; };};
module visualization_msgs { module msg { module dds_ { module InteractiveMarkerFeedback_Constants { const octet KEEP_ALIVE_ = 0; const octet POSE_UPDATE_ = 1; const octet MENU_SELECT_ = 2; const octet BUTTON_CLICK_ = 3; const octet MOUSE_DOWN_ = 4; const octet MOUSE_UP_ = 5; }; @appendable struct InteractiveMarkerFeedback_ { std_msgs::msg::dds_::Header_ header; string client_id; string marker_name; string control_name; octet event_type; geometry_msgs::msg::dds_::Pose_ pose; uint32 menu_entry_id; geometry_msgs::msg::dds_::Point_ mouse_point; boolean mouse_point_valid; }; }; };};
module visualization_msgs { module msg { module dds_ { module InteractiveMarkerUpdate_Constants { const octet KEEP_ALIVE_ = 0; const octet UPDATE_ = 1; }; @appendable struct InteractiveMarkerUpdate_ { string server_id; uint64 seq_num; octet type; sequence<visualization_msgs::msg::dds_::InteractiveMarker_> markers; sequence<visualization_msgs::msg::dds_::InteractiveMarkerPose_> poses; sequence<string> erases; }; }; };};
module visualization_msgs { module srv { module dds_ { @appendable struct GetInteractiveMarkers_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module visualization_msgs { module srv { module dds_ { @appendable struct GetInteractiveMarkers_Response_ { uint64 sequence_number; sequence<visualization_msgs::msg::dds_::InteractiveMarker_> markers; }; }; };};
/** commented-out some less-frequently-used data types to limit max obj file size 
module action_tutorials_interfaces { module action { module dds_ { @appendable struct Fibonacci_Feedback_ { sequence<int32> partial_sequence; }; }; };};
module action_tutorials_interfaces { module action { module dds_ { @appendable struct Fibonacci_FeedbackMessage_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; action_tutorials_interfaces::action::dds_::Fibonacci_Feedback_ feedback; }; }; };};
module action_tutorials_interfaces { module action { module dds_ { @appendable struct Fibonacci_GetResult_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; }; }; };};
module action_tutorials_interfaces { module action { module dds_ { @appendable struct Fibonacci_Result_ { sequence<int32> sequence; }; }; };};
module action_tutorials_interfaces { module action { module dds_ { @appendable struct Fibonacci_GetResult_Response_ { octet status; action_tutorials_interfaces::action::dds_::Fibonacci_Result_ result; }; }; };};
module action_tutorials_interfaces { module action { module dds_ { @appendable struct Fibonacci_Goal_ { int32 order; }; }; };};
module action_tutorials_interfaces { module action { module dds_ { @appendable struct Fibonacci_SendGoal_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; action_tutorials_interfaces::action::dds_::Fibonacci_Goal_ goal; }; }; };};
module action_tutorials_interfaces { module action { module dds_ { @appendable struct Fibonacci_SendGoal_Response_ { boolean accepted; builtin_interfaces::msg::dds_::Time_ stamp; }; }; };};
module example_interfaces { module action { module dds_ { @appendable struct Fibonacci_Feedback_ { sequence<int32> sequence; }; }; };};
module example_interfaces { module action { module dds_ { @appendable struct Fibonacci_FeedbackMessage_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; example_interfaces::action::dds_::Fibonacci_Feedback_ feedback; }; }; };};
module example_interfaces { module action { module dds_ { @appendable struct Fibonacci_Result_ { sequence<int32> sequence; }; }; };};
module example_interfaces { module action { module dds_ { @appendable struct Fibonacci_GetResult_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; }; }; };};
module example_interfaces { module action { module dds_ { @appendable struct Fibonacci_GetResult_Response_ { octet status; example_interfaces::action::dds_::Fibonacci_Result_ result; }; }; };};
module example_interfaces { module action { module dds_ { @appendable struct Fibonacci_Goal_ { int32 order; }; }; };};
module example_interfaces { module action { module dds_ { @appendable struct Fibonacci_SendGoal_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; example_interfaces::action::dds_::Fibonacci_Goal_ goal; }; }; };};
module example_interfaces { module action { module dds_ { @appendable struct Fibonacci_SendGoal_Response_ { boolean accepted; builtin_interfaces::msg::dds_::Time_ stamp; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Bool_ { boolean data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Byte_ { octet data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Char_ { octet data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Empty_ { octet structure_needs_at_least_one_member; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct MultiArrayDimension_ { string label; uint32 size; uint32 stride; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct MultiArrayLayout_ { sequence<example_interfaces::msg::dds_::MultiArrayDimension_> dim; uint32 data_offset; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct ByteMultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<octet> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Float32MultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<float> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Float32_ { float data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Float64MultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<double> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Float64_ { double data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Int16MultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<int16> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Int16_ { int16 data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Int32MultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<int32> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Int32_ { int32 data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Int64MultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<int64> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Int64_ { int64 data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Int8MultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<octet> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct Int8_ { octet data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct String_ { string data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct UInt16MultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<uint16> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct UInt16_ { uint16 data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct UInt32MultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<uint32> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct UInt32_ { uint32 data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct UInt64MultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<uint64> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct UInt64_ { uint64 data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct UInt8MultiArray_ { example_interfaces::msg::dds_::MultiArrayLayout_ layout; sequence<octet> data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct UInt8_ { octet data; }; }; };};
module example_interfaces { module msg { module dds_ { @appendable struct WString_ { wstring data; }; }; };};
module example_interfaces { module srv { module dds_ { @appendable struct AddTwoInts_Request_ { int64 a; int64 b; }; }; };};
module example_interfaces { module srv { module dds_ { @appendable struct AddTwoInts_Response_ { int64 sum; }; }; };};
module example_interfaces { module srv { module dds_ { @appendable struct SetBool_Request_ { boolean data; }; }; };};
module example_interfaces { module srv { module dds_ { @appendable struct SetBool_Response_ { boolean success; string message; }; }; };};
module example_interfaces { module srv { module dds_ { @appendable struct Trigger_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module example_interfaces { module srv { module dds_ { @appendable struct Trigger_Response_ { boolean success; string message; }; }; };};
module rosidl_generator_py { module msg { module dds_ { module Constants_Constants { const boolean BOOL_CONST_ = TRUE; const octet BYTE_CONST_ = 50; const octet CHAR_CONST_ = 100; const float FLOAT32_CONST_ = 1.125000; const double FLOAT64_CONST_ = 1.125000; const octet INT8_CONST_ = 206; const octet UINT8_CONST_ = 200; const int16 INT16_CONST_ = -1000; const uint16 UINT16_CONST_ = 2000; const int32 INT32_CONST_ = -30000; const uint32 UINT32_CONST_ = 60000; const int64 INT64_CONST_ = -40000000; const uint64 UINT64_CONST_ = 50000000; }; @appendable struct Constants_ { octet structure_needs_at_least_one_member; }; }; };};
module rosidl_generator_py { module msg { module dds_ { module Strings_Constants { const string STRING_CONST_ = "Hello world!"; }; @appendable struct Strings_ { string string_value; string string_value_default1; string string_value_default2; string string_value_default3; string string_value_default4; string string_value_default5; string<22> bounded_string_value; string<22> bounded_string_value_default1; string<22> bounded_string_value_default2; string<22> bounded_string_value_default3; string<22> bounded_string_value_default4; string<22> bounded_string_value_default5; }; }; };};
module rosidl_generator_py { module msg { module dds_ { @appendable struct BasicTypes_ { boolean bool_value; octet byte_value; octet char_value; float float32_value; double float64_value; octet int8_value; octet uint8_value; int16 int16_value; uint16 uint16_value; int32 int32_value; uint32 uint32_value; int64 int64_value; uint64 uint64_value; }; }; };};
module rosidl_generator_py { module msg { module dds_ { @appendable struct Defaults_ { boolean bool_value; octet byte_value; octet char_value; float float32_value; double float64_value; octet int8_value; octet uint8_value; int16 int16_value; uint16 uint16_value; int32 int32_value; uint32 uint32_value; int64 int64_value; uint64 uint64_value; }; }; };};
module rosidl_generator_py { module msg { module dds_ { @appendable struct Arrays_ { boolean bool_values[3]; octet byte_values[3]; octet char_values[3]; float float32_values[3]; double float64_values[3]; octet int8_values[3]; octet uint8_values[3]; int16 int16_values[3]; uint16 uint16_values[3]; int32 int32_values[3]; uint32 uint32_values[3]; int64 int64_values[3]; uint64 uint64_values[3]; string string_values[3]; rosidl_generator_py::msg::dds_::BasicTypes_ basic_types_values[3]; rosidl_generator_py::msg::dds_::Constants_ constants_values[3]; rosidl_generator_py::msg::dds_::Defaults_ defaults_values[3]; boolean bool_values_default[3]; octet byte_values_default[3]; octet char_values_default[3]; float float32_values_default[3]; double float64_values_default[3]; octet int8_values_default[3]; octet uint8_values_default[3]; int16 int16_values_default[3]; uint16 uint16_values_default[3]; int32 int32_values_default[3]; uint32 uint32_values_default[3]; int64 int64_values_default[3]; uint64 uint64_values_default[3]; string string_values_default[3]; int32 alignment_check; }; }; };};
module rosidl_generator_py { module msg { module dds_ { @appendable struct BoundedSequences_ { sequence<boolean,3> bool_values; sequence<octet,3> byte_values; sequence<octet,3> char_values; sequence<float,3> float32_values; sequence<double,3> float64_values; sequence<octet,3> int8_values; sequence<octet,3> uint8_values; sequence<int16,3> int16_values; sequence<uint16,3> uint16_values; sequence<int32,3> int32_values; sequence<uint32,3> uint32_values; sequence<int64,3> int64_values; sequence<uint64,3> uint64_values; sequence<string,3 > string_values; sequence<rosidl_generator_py::msg::dds_::BasicTypes_,3> basic_types_values; sequence<rosidl_generator_py::msg::dds_::Constants_,3> constants_values; sequence<rosidl_generator_py::msg::dds_::Defaults_,3> defaults_values; sequence<boolean,3> bool_values_default; sequence<octet,3> byte_values_default; sequence<octet,3> char_values_default; sequence<float,3> float32_values_default; sequence<double,3> float64_values_default; sequence<octet,3> int8_values_default; sequence<octet,3> uint8_values_default; sequence<int16,3> int16_values_default; sequence<uint16,3> uint16_values_default; sequence<int32,3> int32_values_default; sequence<uint32,3> uint32_values_default; sequence<int64,3> int64_values_default; sequence<uint64,3> uint64_values_default; sequence<string,3 > string_values_default; int32 alignment_check; }; }; };};
module rosidl_generator_py { module msg { module dds_ { @appendable struct Empty_ { octet structure_needs_at_least_one_member; }; }; };};
module rosidl_generator_py { module msg { module dds_ { @appendable struct UnboundedSequences_ { sequence<boolean> bool_values; sequence<octet> byte_values; sequence<octet> char_values; sequence<float> float32_values; sequence<double> float64_values; sequence<octet> int8_values; sequence<octet> uint8_values; sequence<int16> int16_values; sequence<uint16> uint16_values; sequence<int32> int32_values; sequence<uint32> uint32_values; sequence<int64> int64_values; sequence<uint64> uint64_values; sequence<string> string_values; sequence<rosidl_generator_py::msg::dds_::BasicTypes_> basic_types_values; sequence<rosidl_generator_py::msg::dds_::Constants_> constants_values; sequence<rosidl_generator_py::msg::dds_::Defaults_> defaults_values; sequence<boolean> bool_values_default; sequence<octet> byte_values_default; sequence<octet> char_values_default; sequence<float> float32_values_default; sequence<double> float64_values_default; sequence<octet> int8_values_default; sequence<octet> uint8_values_default; sequence<int16> int16_values_default; sequence<uint16> uint16_values_default; sequence<int32> int32_values_default; sequence<uint32> uint32_values_default; sequence<int64> int64_values_default; sequence<uint64> uint64_values_default; sequence<string> string_values_default; int32 alignment_check; }; }; };};
module rosidl_generator_py { module msg { module dds_ { @appendable struct MultiNested_ { rosidl_generator_py::msg::dds_::Arrays_ array_of_arrays[3]; rosidl_generator_py::msg::dds_::BoundedSequences_ array_of_bounded_sequences[3]; rosidl_generator_py::msg::dds_::UnboundedSequences_ array_of_unbounded_sequences[3]; sequence<rosidl_generator_py::msg::dds_::Arrays_,3> bounded_sequence_of_arrays; sequence<rosidl_generator_py::msg::dds_::BoundedSequences_,3> bounded_sequence_of_bounded_sequences; sequence<rosidl_generator_py::msg::dds_::UnboundedSequences_,3> bounded_sequence_of_unbounded_sequences; sequence<rosidl_generator_py::msg::dds_::Arrays_> unbounded_sequence_of_arrays; sequence<rosidl_generator_py::msg::dds_::BoundedSequences_> unbounded_sequence_of_bounded_sequences; sequence<rosidl_generator_py::msg::dds_::UnboundedSequences_> unbounded_sequence_of_unbounded_sequences; }; }; };};
module rosidl_generator_py { module msg { module dds_ { @appendable struct Nested_ { rosidl_generator_py::msg::dds_::BasicTypes_ basic_types_value; }; }; };};
module rosidl_generator_py { module msg { module dds_ { @appendable struct StringArrays_ { string<5> ub_string_static_array_value[3]; sequence<string<5>,10 > ub_string_ub_array_value; sequence<string<5> > ub_string_dynamic_array_value; sequence<string> string_dynamic_array_value; string string_static_array_value[3]; sequence<string,10 > string_bounded_array_value; sequence<string> def_string_dynamic_array_value; string def_string_static_array_value[3]; sequence<string,10 > def_string_bounded_array_value; sequence<string> def_various_quotes; sequence<string> def_various_commas; }; }; };};
module rosidl_generator_py { module msg { module dds_ { @appendable struct WStrings_ { wstring wstring_value; wstring wstring_value_default1; wstring wstring_value_default2; wstring wstring_value_default3; wstring array_of_wstrings[3]; sequence<wstring,3 > bounded_sequence_of_wstrings; sequence<wstring> unbounded_sequence_of_wstrings; }; }; };};
module test_msgs { module msg { module dds_ { module Constants_Constants { const boolean BOOL_CONST_ = TRUE; const octet BYTE_CONST_ = 50; const octet CHAR_CONST_ = 100; const float FLOAT32_CONST_ = 1.125000; const double FLOAT64_CONST_ = 1.125000; const octet INT8_CONST_ = 206; const octet UINT8_CONST_ = 200; const int16 INT16_CONST_ = -1000; const uint16 UINT16_CONST_ = 2000; const int32 INT32_CONST_ = -30000; const uint32 UINT32_CONST_ = 60000; const int64 INT64_CONST_ = -40000000; const uint64 UINT64_CONST_ = 50000000; }; @appendable struct Constants_ { octet structure_needs_at_least_one_member; }; }; };};
module test_msgs { module msg { module dds_ { module Strings_Constants { const string STRING_CONST_ = "Hello world!"; }; @appendable struct Strings_ { string string_value; string string_value_default1; string string_value_default2; string string_value_default3; string string_value_default4; string string_value_default5; string<22> bounded_string_value; string<22> bounded_string_value_default1; string<22> bounded_string_value_default2; string<22> bounded_string_value_default3; string<22> bounded_string_value_default4; string<22> bounded_string_value_default5; }; }; };};
module test_msgs { module msg { module dds_ { @appendable struct BasicTypes_ { boolean bool_value; octet byte_value; octet char_value; float float32_value; double float64_value; octet int8_value; octet uint8_value; int16 int16_value; uint16 uint16_value; int32 int32_value; uint32 uint32_value; int64 int64_value; uint64 uint64_value; }; }; };};
module test_msgs { module msg { module dds_ { @appendable struct Defaults_ { boolean bool_value; octet byte_value; octet char_value; float float32_value; double float64_value; octet int8_value; octet uint8_value; int16 int16_value; uint16 uint16_value; int32 int32_value; uint32 uint32_value; int64 int64_value; uint64 uint64_value; }; }; };};
module test_msgs { module msg { module dds_ { @appendable struct Arrays_ { boolean bool_values[3]; octet byte_values[3]; octet char_values[3]; float float32_values[3]; double float64_values[3]; octet int8_values[3]; octet uint8_values[3]; int16 int16_values[3]; uint16 uint16_values[3]; int32 int32_values[3]; uint32 uint32_values[3]; int64 int64_values[3]; uint64 uint64_values[3]; string string_values[3]; test_msgs::msg::dds_::BasicTypes_ basic_types_values[3]; test_msgs::msg::dds_::Constants_ constants_values[3]; test_msgs::msg::dds_::Defaults_ defaults_values[3]; boolean bool_values_default[3]; octet byte_values_default[3]; octet char_values_default[3]; float float32_values_default[3]; double float64_values_default[3]; octet int8_values_default[3]; octet uint8_values_default[3]; int16 int16_values_default[3]; uint16 uint16_values_default[3]; int32 int32_values_default[3]; uint32 uint32_values_default[3]; int64 int64_values_default[3]; uint64 uint64_values_default[3]; string string_values_default[3]; int32 alignment_check; }; }; };};
module test_msgs { module msg { module dds_ { @appendable struct BoundedSequences_ { sequence<boolean,3> bool_values; sequence<octet,3> byte_values; sequence<octet,3> char_values; sequence<float,3> float32_values; sequence<double,3> float64_values; sequence<octet,3> int8_values; sequence<octet,3> uint8_values; sequence<int16,3> int16_values; sequence<uint16,3> uint16_values; sequence<int32,3> int32_values; sequence<uint32,3> uint32_values; sequence<int64,3> int64_values; sequence<uint64,3> uint64_values; sequence<string,3 > string_values; sequence<test_msgs::msg::dds_::BasicTypes_,3> basic_types_values; sequence<test_msgs::msg::dds_::Constants_,3> constants_values; sequence<test_msgs::msg::dds_::Defaults_,3> defaults_values; sequence<boolean,3> bool_values_default; sequence<octet,3> byte_values_default; sequence<octet,3> char_values_default; sequence<float,3> float32_values_default; sequence<double,3> float64_values_default; sequence<octet,3> int8_values_default; sequence<octet,3> uint8_values_default; sequence<int16,3> int16_values_default; sequence<uint16,3> uint16_values_default; sequence<int32,3> int32_values_default; sequence<uint32,3> uint32_values_default; sequence<int64,3> int64_values_default; sequence<uint64,3> uint64_values_default; sequence<string,3 > string_values_default; int32 alignment_check; }; }; };};
module test_msgs { module msg { module dds_ { @appendable struct Builtins_ { builtin_interfaces::msg::dds_::Duration_ duration_value; builtin_interfaces::msg::dds_::Time_ time_value; }; }; };};
module test_msgs { module msg { module dds_ { @appendable struct Empty_ { octet structure_needs_at_least_one_member; }; }; };};
module test_msgs { module msg { module dds_ { @appendable struct UnboundedSequences_ { sequence<boolean> bool_values; sequence<octet> byte_values; sequence<octet> char_values; sequence<float> float32_values; sequence<double> float64_values; sequence<octet> int8_values; sequence<octet> uint8_values; sequence<int16> int16_values; sequence<uint16> uint16_values; sequence<int32> int32_values; sequence<uint32> uint32_values; sequence<int64> int64_values; sequence<uint64> uint64_values; sequence<string> string_values; sequence<test_msgs::msg::dds_::BasicTypes_> basic_types_values; sequence<test_msgs::msg::dds_::Constants_> constants_values; sequence<test_msgs::msg::dds_::Defaults_> defaults_values; sequence<boolean> bool_values_default; sequence<octet> byte_values_default; sequence<octet> char_values_default; sequence<float> float32_values_default; sequence<double> float64_values_default; sequence<octet> int8_values_default; sequence<octet> uint8_values_default; sequence<int16> int16_values_default; sequence<uint16> uint16_values_default; sequence<int32> int32_values_default; sequence<uint32> uint32_values_default; sequence<int64> int64_values_default; sequence<uint64> uint64_values_default; sequence<string> string_values_default; int32 alignment_check; }; }; };};
module test_msgs { module msg { module dds_ { @appendable struct MultiNested_ { test_msgs::msg::dds_::Arrays_ array_of_arrays[3]; test_msgs::msg::dds_::BoundedSequences_ array_of_bounded_sequences[3]; test_msgs::msg::dds_::UnboundedSequences_ array_of_unbounded_sequences[3]; sequence<test_msgs::msg::dds_::Arrays_,3> bounded_sequence_of_arrays; sequence<test_msgs::msg::dds_::BoundedSequences_,3> bounded_sequence_of_bounded_sequences; sequence<test_msgs::msg::dds_::UnboundedSequences_,3> bounded_sequence_of_unbounded_sequences; sequence<test_msgs::msg::dds_::Arrays_> unbounded_sequence_of_arrays; sequence<test_msgs::msg::dds_::BoundedSequences_> unbounded_sequence_of_bounded_sequences; sequence<test_msgs::msg::dds_::UnboundedSequences_> unbounded_sequence_of_unbounded_sequences; }; }; };};
module test_msgs { module msg { module dds_ { @appendable struct Nested_ { test_msgs::msg::dds_::BasicTypes_ basic_types_value; }; }; };};
module test_msgs { module msg { module dds_ { @appendable struct WStrings_ { wstring wstring_value; wstring wstring_value_default1; wstring wstring_value_default2; wstring wstring_value_default3; wstring array_of_wstrings[3]; sequence<wstring,3 > bounded_sequence_of_wstrings; sequence<wstring> unbounded_sequence_of_wstrings; }; }; };};
module test_msgs { module srv { module dds_ { @appendable struct Arrays_Request_ { boolean bool_values[3]; octet byte_values[3]; octet char_values[3]; float float32_values[3]; double float64_values[3]; octet int8_values[3]; octet uint8_values[3]; int16 int16_values[3]; uint16 uint16_values[3]; int32 int32_values[3]; uint32 uint32_values[3]; int64 int64_values[3]; uint64 uint64_values[3]; string string_values[3]; test_msgs::msg::dds_::BasicTypes_ basic_types_values[3]; test_msgs::msg::dds_::Constants_ constants_values[3]; test_msgs::msg::dds_::Defaults_ defaults_values[3]; boolean bool_values_default[3]; octet byte_values_default[3]; octet char_values_default[3]; float float32_values_default[3]; double float64_values_default[3]; octet int8_values_default[3]; octet uint8_values_default[3]; int16 int16_values_default[3]; uint16 uint16_values_default[3]; int32 int32_values_default[3]; uint32 uint32_values_default[3]; int64 int64_values_default[3]; uint64 uint64_values_default[3]; string string_values_default[3]; }; }; };};
module test_msgs { module srv { module dds_ { @appendable struct Arrays_Response_ { boolean bool_values[3]; octet byte_values[3]; octet char_values[3]; float float32_values[3]; double float64_values[3]; octet int8_values[3]; octet uint8_values[3]; int16 int16_values[3]; uint16 uint16_values[3]; int32 int32_values[3]; uint32 uint32_values[3]; int64 int64_values[3]; uint64 uint64_values[3]; string string_values[3]; test_msgs::msg::dds_::BasicTypes_ basic_types_values[3]; test_msgs::msg::dds_::Constants_ constants_values[3]; test_msgs::msg::dds_::Defaults_ defaults_values[3]; boolean bool_values_default[3]; octet byte_values_default[3]; octet char_values_default[3]; float float32_values_default[3]; double float64_values_default[3]; octet int8_values_default[3]; octet uint8_values_default[3]; int16 int16_values_default[3]; uint16 uint16_values_default[3]; int32 int32_values_default[3]; uint32 uint32_values_default[3]; int64 int64_values_default[3]; uint64 uint64_values_default[3]; string string_values_default[3]; }; }; };};
module test_msgs { module srv { module dds_ { @appendable struct BasicTypes_Request_ { boolean bool_value; octet byte_value; octet char_value; float float32_value; double float64_value; octet int8_value; octet uint8_value; int16 int16_value; uint16 uint16_value; int32 int32_value; uint32 uint32_value; int64 int64_value; uint64 uint64_value; string string_value; }; }; };};
module test_msgs { module srv { module dds_ { @appendable struct BasicTypes_Response_ { boolean bool_value; octet byte_value; octet char_value; float float32_value; double float64_value; octet int8_value; octet uint8_value; int16 int16_value; uint16 uint16_value; int32 int32_value; uint32 uint32_value; int64 int64_value; uint64 uint64_value; string string_value; }; }; };};
module test_msgs { module srv { module dds_ { @appendable struct Empty_Request_ { octet structure_needs_at_least_one_member; }; }; };};
module test_msgs { module srv { module dds_ { @appendable struct Empty_Response_ { octet structure_needs_at_least_one_member; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct Fibonacci_Feedback_ { sequence<int32> sequence; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct Fibonacci_FeedbackMessage_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; test_msgs::action::dds_::Fibonacci_Feedback_ feedback; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct Fibonacci_Result_ { sequence<int32> sequence; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct Fibonacci_GetResult_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct Fibonacci_GetResult_Response_ { octet status; test_msgs::action::dds_::Fibonacci_Result_ result; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct Fibonacci_Goal_ { int32 order; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct Fibonacci_SendGoal_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; test_msgs::action::dds_::Fibonacci_Goal_ goal; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct Fibonacci_SendGoal_Response_ { boolean accepted; builtin_interfaces::msg::dds_::Time_ stamp; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct NestedMessage_Feedback_ { test_msgs::msg::dds_::Builtins_ nested_field_no_pkg; test_msgs::msg::dds_::BasicTypes_ nested_field; builtin_interfaces::msg::dds_::Time_ nested_different_pkg; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct NestedMessage_FeedbackMessage_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; test_msgs::action::dds_::NestedMessage_Feedback_ feedback; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct NestedMessage_Result_ { test_msgs::msg::dds_::Builtins_ nested_field_no_pkg; test_msgs::msg::dds_::BasicTypes_ nested_field; builtin_interfaces::msg::dds_::Time_ nested_different_pkg; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct NestedMessage_GetResult_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct NestedMessage_GetResult_Response_ { octet status; test_msgs::action::dds_::NestedMessage_Result_ result; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct NestedMessage_Goal_ { test_msgs::msg::dds_::Builtins_ nested_field_no_pkg; test_msgs::msg::dds_::BasicTypes_ nested_field; builtin_interfaces::msg::dds_::Time_ nested_different_pkg; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct NestedMessage_SendGoal_Request_ { unique_identifier_msgs::msg::dds_::UUID_ goal_id; test_msgs::action::dds_::NestedMessage_Goal_ goal; }; }; };};
module test_msgs { module action { module dds_ { @appendable struct NestedMessage_SendGoal_Response_ { boolean accepted; builtin_interfaces::msg::dds_::Time_ stamp; }; }; };};
module test_communication { module msg { module dds_ { @appendable struct FieldsWithSameType_ { test_msgs::msg::dds_::BasicTypes_ basic_types_values1; test_msgs::msg::dds_::BasicTypes_ basic_types_values2; }; }; };};
module test_communication { module msg { module dds_ { @appendable struct UInt32_ { uint32 data; }; }; };};
module test_rclcpp { module msg { module dds_ { @appendable struct UInt32_ { uint32 data; }; }; };};
module test_rclcpp { module srv { module dds_ { @appendable struct AddTwoInts_Request_ { int64 a; int64 b; }; }; };};
module test_rclcpp { module srv { module dds_ { @appendable struct AddTwoInts_Response_ { int64 sum; }; }; };};
**/
