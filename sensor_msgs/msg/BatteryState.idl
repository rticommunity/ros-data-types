/* 
 * Copyright 2012-2018 Open Source Robotics Foundation 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License. 
 */ 

#ifndef __sensor_msgs__msg__BatteryState__idl
#define __sensor_msgs__msg__BatteryState__idl

#include "std_msgs/msg/Header.idl"

module sensor_msgs {
  module msg {
    module dds_ {
      module BatteryState_Constants {
        const octet POWER_SUPPLY_STATUS_UNKNOWN_ = 0;
        const octet POWER_SUPPLY_STATUS_CHARGING_ = 1;
        const octet POWER_SUPPLY_STATUS_DISCHARGING_ = 2;
        const octet POWER_SUPPLY_STATUS_NOT_CHARGING_ = 3;
        const octet POWER_SUPPLY_STATUS_FULL_ = 4;
        const octet POWER_SUPPLY_HEALTH_UNKNOWN_ = 0;
        const octet POWER_SUPPLY_HEALTH_GOOD_ = 1;
        const octet POWER_SUPPLY_HEALTH_OVERHEAT_ = 2;
        const octet POWER_SUPPLY_HEALTH_DEAD_ = 3;
        const octet POWER_SUPPLY_HEALTH_OVERVOLTAGE_ = 4;
        const octet POWER_SUPPLY_HEALTH_UNSPEC_FAILURE_ = 5;
        const octet POWER_SUPPLY_HEALTH_COLD_ = 6;
        const octet POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE_ = 7;
        const octet POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE_ = 8;
        const octet POWER_SUPPLY_TECHNOLOGY_UNKNOWN_ = 0;
        const octet POWER_SUPPLY_TECHNOLOGY_NIMH_ = 1;
        const octet POWER_SUPPLY_TECHNOLOGY_LION_ = 2;
        const octet POWER_SUPPLY_TECHNOLOGY_LIPO_ = 3;
        const octet POWER_SUPPLY_TECHNOLOGY_LIFE_ = 4;
        const octet POWER_SUPPLY_TECHNOLOGY_NICD_ = 5;
        const octet POWER_SUPPLY_TECHNOLOGY_LIMN_ = 6;
      };
      @appendable struct BatteryState_ {
        std_msgs::msg::dds_::Header_ header;
        float voltage;
        float temperature;
        float current;
        float charge;
        float capacity;
        float design_capacity;
        float percentage;
        octet power_supply_status;
        octet power_supply_health;
        octet power_supply_technology;
        boolean present;
        sequence<float> cell_voltage;
        sequence<float> cell_temperature;
        string location;
        string serial_number;
      };
    };
  };
};


#endif // __sensor_msgs__msg__BatteryState__idl
